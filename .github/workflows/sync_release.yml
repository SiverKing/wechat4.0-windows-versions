name: Sync Release from Upstream

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *'

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
    - name: Install GitHub CLI
      run: |
        sudo apt update
        sudo apt install gh jq -y

    - name: Fetch latest release from upstream
      id: get_release
      run: |
        release_json=$(gh api repos/cscnk52/wechat-windows-versions/releases/latest)
        echo "$release_json" > release.json

        tag_name=$(echo "$release_json" | jq -r .tag_name)
        echo "TAG_NAME=$tag_name" >> $GITHUB_ENV

        echo "$release_json" | jq -r .body > release_body.txt
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Check if release already exists
      id: check_release
      continue-on-error: true
      run: |
        gh release view "$TAG_NAME" -R SiverKing/wechat4.0-windows-versions
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        TAG_NAME: ${{ env.TAG_NAME }}

    - name: Download assets from upstream release
      if: steps.check_release.outcome == 'failure'
      run: |
        mkdir -p assets
        for url in $(jq -r '.assets[].browser_download_url' release.json); do
          wget -P assets "$url"
        done

    - name: Publish release to your repo
      if: steps.check_release.outcome == 'failure'
      run: |
        gh release create "$TAG_NAME" assets/* \
          --repo SiverKing/wechat4.0-windows-versions \
          --title "$TAG_NAME" \
          --notes-file release_body.txt
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        TAG_NAME: ${{ env.TAG_NAME }}
